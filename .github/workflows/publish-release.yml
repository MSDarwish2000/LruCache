name: Publish Release

on:
  release:
    types: [ created ]

concurrency:
  group: "release"
  cancel-in-progress: false

jobs:
  publish:
    strategy:
      matrix:
        os: [macOS-latest, ubuntu-latest]

    runs-on: ${{matrix.os}}
    if: github.repository == 'MayakaApps/Kache'

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Setup gradle
        uses: gradle/gradle-build-action@v2

      - name: Extract Kotlin version
        run: |
          echo "KOTLIN_VERSION=$(sed -rn 's/^kotlin[[:space:]]?=[[:space:]]?\"(.*)\"/\1/p' 'gradle/libs.versions.toml')" >> $GITHUB_ENV

      - name: Cache Konan
        uses: actions/cache@v2
        with:
          path: ~/.konan
          key: ${{ runner.os }}-konan-${{ env.KOTLIN_VERSION }}
          restore-keys: ${{ runner.os }}-konan-

      - name: Upload Linux-specific and common artifacts
        if: matrix.os == 'ubuntu-latest'
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.SONATYPE_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.SONATYPE_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.GPG_KEY }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyId: ${{ secrets.GPG_KEY_ID }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.GPG_KEY_PASSWORD }}
        run: ./gradlew publishAllPublicationsToMavenCentralRepository -PisMainHost=true

      - name: Upload macOS-specific artifacts
        if: matrix.os == 'macOS-latest'
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.SONATYPE_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.SONATYPE_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.GPG_KEY }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyId: ${{ secrets.GPG_KEY_ID }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.GPG_KEY_PASSWORD }}
        run: ./gradlew publishAllPublicationsToMavenCentralRepository

      - name: Publish release
        if: matrix.os == 'ubuntu-latest'
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.SONATYPE_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.SONATYPE_PASSWORD }}
        run: ./gradlew closeAndReleaseRepository