name: Publish Snapshot

on:
  push:
    branches:
      - main

concurrency:
  group: "release"
  cancel-in-progress: false

jobs:
  publish:
    strategy:
      matrix:
        os: [ macOS-latest, ubuntu-latest ]

    runs-on: ${{matrix.os}}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Setup gradle
        uses: gradle/gradle-build-action@v2

      - name: Extract Kache and Kotlin versions
        run: |
          echo "KACHE_VERSION=$(sed -rn 's/^VERSION_NAME=(.*)\r?$/\1/p' 'gradle.properties')" >> $GITHUB_ENV
          echo "KOTLIN_VERSION=$(sed -rn 's/^kotlin\s?=\s?\"(.*)\"/\1/p' 'gradle/libs.versions.toml')" >> $GITHUB_ENV

      - name: Upload Linux-specific and common snapshot artifacts
        if: endsWith(env.KACHE_VERSION, '-SNAPSHOT') && matrix.os == 'ubuntu-latest'
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.SONATYPE_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.SONATYPE_PASSWORD }}
        run: ./gradlew publishAllPublicationsToMavenCentralRepository -PisMainHost=true

      - name: Upload macOS-specific snapshot artifacts
        if: endsWith(env.KACHE_VERSION, '-SNAPSHOT') && matrix.os == 'macOS-latest'
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.SONATYPE_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.SONATYPE_PASSWORD }}
        run: ./gradlew publishAllPublicationsToMavenCentralRepository