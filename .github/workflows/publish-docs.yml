name: Publish Documentation

on:
  push:
    branches: [main]
  release:
    types: [published]
  workflow_dispatch:

concurrency:
  group: "docs"
  cancel-in-progress: false

jobs:
  publish-docs:
    runs-on: ubuntu-latest
    if: github.repository == 'MayakaApps/Kache'

    permissions:
      contents: write
      pages: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure Pages
        uses: actions/configure-pages@v4

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Setup gradle
        uses: gradle/gradle-build-action@v2

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11.3 # See the pinned version in renovate.json too

      - name: Extract Kache version
        run: |
          echo "KACHE_VERSION=$(sed -rn 's/^VERSION_NAME=(.*)\r?$/\1/p' 'gradle.properties')" >> $GITHUB_ENV

      - name: Prepare the documentation
        run: .github/workflows/publish-docs-prep.sh

      - name: Build mkdocs
        run: |
          pip3 install --no-deps -r .github/workflows/publish-docs-requirements.txt
          mkdocs build

      - name: Configure git for mike
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git fetch origin gh-pages --depth=1

      - name: Deploy SNAPSHOT documentation with mike
        if: ${{ success() && endsWith(env.KACHE_VERSION, '-SNAPSHOT') }}
        run: mike deploy -u --push ${{ env.KACHE_VERSION }} snapshot

      - name: Deploy documentation with mike
        if: ${{ success() && !endsWith(env.KACHE_VERSION, '-SNAPSHOT') && github.event_name == 'release' }}
        run: mike deploy -u --push ${{ env.KACHE_VERSION }} latest
